name: CI/CD Pipeline
run-name: ${{ github.actor }}'s CI/CD Pipeline'

on:
  push:
    branches:
      - main
  pull_request:
    branches-ignore:
      - "ga-ignore-"

jobs:
  build_pr:
    name: 🛠️ Build PR
    runs-on: self-hosted
    if: github.event_name == 'pull_request'

    steps:
      - name: 💾 Cache Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './server/package-lock.json'

      - name: 👀 Checkout repository
        uses: actions/checkout@v4

      - name: 🔼 Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: 🛠️ Build Docker images
        run: |
          # docker compose -f docker-compose.yml build --parallel
          docker build -t whatsup_backend:latest ./server
          docker build -t whatsup_frontend:latest .

  build_docker_images:
    name: 🛠️ Build Docker images
    runs-on: self-hosted
    if: github.event_name == 'push'

    steps:
      - name: 💾 Cache Dependencies
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: './server/package-lock.json'

      - name: 👀 Checkout repository
        uses: actions/checkout@v4

      - name: 🔼 Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: 🛠️ Build Docker images
        run: |
          docker build -t whatsup_file_storage:latest .
          docker build -t whatsup_backend:latest ./server --build-arg SERVER_URL=${{ secrets.SERVER_URL }} --build-arg SERVER_PORT=${{ secrets.SERVER_PORT }} --build-arg MONGO_URI=${{ secrets.MONGO_URI }} --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }} --build-arg TOKEN_EXPIRATION=${{ secrets.TOKEN_EXPIRATION }} --build-arg TWILIO_ACCOUNT_SID=${{ secrets.TWILIO_ACCOUNT_SID }} --build-arg TWILIO_AUTH_TOKEN=${{ secrets.TWILIO_AUTH_TOKEN }}
          docker build -t whatsup_frontend:latest . --build-arg SERVER_URL=${{ secrets.SERVER_URL }} --build-arg JWT_SECRET=${{ secrets.JWT_SECRET }}

  security_pr:
    name: 🔒 Security PR
    runs-on: self-hosted
    needs: build_pr

    steps:
      - name: 🕵️‍♂️ Security Scan Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: whatsup_backend:latest
          format: table
          exit-code: 1
          severity: 'CRITICAL,HIGH'

      - name: 🕵️‍♂️ Security Scan Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: whatsup_frontend:latest
          format: table
          exit-code: 1
          severity: 'CRITICAL,HIGH'

  security:
    name: 🔒 Security
    runs-on: self-hosted
    needs: build_docker_images

    steps:
      - name: 🕵️‍♂️ Security Scan Backend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: whatsup_backend:latest
          format: table
          exit-code: 1
          severity: 'CRITICAL,HIGH'

      - name: 🕵️‍♂️ Security Scan Frontend
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: whatsup_frontend:latest
          format: table
          exit-code: 1
          severity: 'CRITICAL,HIGH'

  push_docker_images:
    name: 📡 Push Docker images
    runs-on: self-hosted
    needs: security
    if: github.event_name == 'push'

    steps:
      - run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker tag whatsup_file_storage:latest ${{ secrets.DOCKER_USERNAME }}/whatsup:file_storage
          docker tag whatsup_backend:latest ${{ secrets.DOCKER_USERNAME }}/whatsup:backend
          docker tag whatsup_frontend:latest ${{ secrets.DOCKER_USERNAME }}/whatsup:frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/whatsup:file_storage
          docker push ${{ secrets.DOCKER_USERNAME }}/whatsup:backend
          docker push ${{ secrets.DOCKER_USERNAME }}/whatsup:frontend

  deploy:
    name: 🚀 Deploy to VPS
    runs-on: self-hosted
    needs: push_docker_images
    if: github.event_name == 'push'

    steps:
      - uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USERNAME }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            cd ${{ secrets.VPS_PROJECT_PATH }}
            sudo curl -Lf "https://raw.githubusercontent.com/DoctorPok42/WhatsUp/main/docker-compose.yml" -o docker-compose.yml
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/whatsup:file_storage
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/whatsup:backend
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/whatsup:frontend
            sudo docker compose -f docker-compose.yml up -d --force-recreate
